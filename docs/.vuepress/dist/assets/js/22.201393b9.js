(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{321:function(t,a,s){"use strict";s.r(a);var n=s(38),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_007-如何部署前后端分离式nginx配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_007-如何部署前后端分离式nginx配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 007.如何部署前后端分离式nginx配置")]),t._v(" "),s("p",[t._v("老生常谈了，这里谈谈我的理解的前后端分离，简单的分离无非是将原来mvc的view层剥离出来，独立一个成为Servlet服务，Servlet之间依靠http连通。这里的view Servlet容器可以是任意一种服务端服务，Tomcat、Apache、Nginx、IIS，都可以。这里以常用的Nginx为例子做简单的介绍。")]),t._v(" "),s("h2",{attrs:{id:"需求分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需求分析","aria-hidden":"true"}},[t._v("#")]),t._v(" 需求分析")]),t._v(" "),s("p",[t._v("先来一波需求分析。")]),t._v(" "),s("ul",[s("li",[t._v("单项目\n"),s("ul",[s("li",[t._v("单项目指的是一台服务器部署一个前端服务，使"),s("code",[t._v("www.xxx.com => index.html")]),t._v("的单一指向。")])])]),t._v(" "),s("li",[t._v("多项目\n"),s("ul",[s("li",[t._v("多项目指的是一台服务器部署多个前端服务，使"),s("code",[t._v("www.xxx.com/a => a.html")]),t._v(","),s("code",[t._v("www.xxx.com/b => b.html")]),t._v("等多指向。")])])]),t._v(" "),s("li",[t._v("请求代理。")]),t._v(" "),s("li",[t._v("cookie domain重写。")]),t._v(" "),s("li",[t._v("cookie path 重写。")])]),t._v(" "),s("p",[t._v("提示：这里做好写conf.d/*.conf，这样配置可以分离处理。")]),t._v(" "),s("h2",{attrs:{id:"公共配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公共配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 公共配置")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置端口")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置域名")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("charset")]),t._v(" utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编码")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx_access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 成功日志")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx_error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误日志")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查找文件顺序")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 变量设置，设置公共路径")]),t._v("\n  \n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其余location")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("请手动去"),s("code",[t._v("/xxx/log/nginx_access.log")]),t._v("和"),s("code",[t._v("/xxx/log/nginx_error.log")]),t._v("下新建对应文件。可能会执行"),s("code",[t._v("nginx reload")]),t._v("第一次执行时会报错。")]),t._v(" "),s("li",[t._v("set的$root路径为绝对路径，access_log和error_log同样都是绝对路径。")])]),t._v(" "),s("h2",{attrs:{id:"单项目配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单项目配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 单项目配置")]),t._v(" "),s("p",[t._v("目录结构")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nginx\n|----- index.html\n|----- user.html\n")])])]),s("p",[t._v("location配置")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("好了最简单的基于根路径配置就这样好了，这里无非是通过location配置一条路径，然后指向到$root文件夹下的index.html这个文件下。")]),t._v(" "),s("h2",{attrs:{id:"多项目配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多项目配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 多项目配置")]),t._v(" "),s("p",[t._v("目录结构")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nginx\n|----- a\n\t\t\t |----- index.html\n|----- b\n\t\t\t |----- index.html\n")])])]),s("p",[t._v("多条location配置")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alias")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alias")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("跟单项目唯一的不同点在于，root和alias的区别，root指的是文件的绝对匹配路径，而alias则是相对匹配。root可以再http、server、location中配置，而alias只能在location中配置。这我还加入的正则"),s("code",[t._v("^~")]),t._v("，当匹配"),s("code",[t._v("/a")]),t._v("或者/b时，不管location的路径是什么，资源的真实路径一定是都是 alias 指定的路径。这样的我就能让"),s("code",[t._v("/a")]),t._v("、"),s("code",[t._v("/b")]),t._v("拥有匹配的到路径之后，拥有跳转固定路径，这在spa式的前端项目非常有用的，因为其实核心文件只有一个index.html文件（资源文件另说）。这样我永远跳转index.html就能保证浏览器手动刷新的时候，不会根据root路径去查找服务器其他路径的资源。然后设置spa的根路径和 "),s("code",[t._v("/b")]),t._v("必须是匹配的。")]),t._v(" "),s("p",[t._v("为什么会有这种需求？前端是轻便的，我们为了达到节约服务器与聚合同类型业务的时候，就会使用到这种机制。就像希望"),s("code",[t._v("admin.xxxx.com/a => 运营管理台")]),t._v("、"),s("code",[t._v("admin.xxxx.com/b => erp管理台")]),t._v("一样。所有admin这个域名下我们只要切出子路径即可。简单轻便。")]),t._v(" "),s("h2",{attrs:{id:"请求转发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求转发","aria-hidden":"true"}},[t._v("#")]),t._v(" 请求转发")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这里就特别简单了，我通过正则匹配"),s("code",[t._v("/api")]),t._v("这个请求，通过proxy_pass属性，将请求定向到"),s("code",[t._v("http://api.xxx.com")]),t._v("。即可")]),t._v(" "),s("h2",{attrs:{id:"修改cookie-domain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改cookie-domain","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改cookie domain")]),t._v(" "),s("p",[t._v("有时候处于安全考虑，我们会设置一定的cookie的domain属性这是对于nginx转发来说就很不友好了。当然也是有解决手段的，也很简单。")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cookie_domain")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本域的domain"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("想修改的domain"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"修改cookie-path"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改cookie-path","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改cookie path")]),t._v(" "),s("p",[t._v("当我们转发回api接口时，有时候api域名拿不到cookie，除了domain还有cookie path的可能性。当然解决方案也很简单")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cookie_path")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本域的路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("想修改的路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"后续优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后续优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 后续优化")]),t._v(" "),s("p",[t._v("这只是nginx配置最简单的一个例子，还有，开启gzip、缓存设置、合并资源请求的插件、设置50x，40x页面、判断移动端，pc端跳转等配置，nginx还是很强大的。")])])},[],!1,null,null,null);a.default=e.exports}}]);