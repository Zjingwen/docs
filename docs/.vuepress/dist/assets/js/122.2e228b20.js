(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{287:function(a,e,t){"use strict";t.r(e);var r=t(38),s=Object(r.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"选择题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择题","aria-hidden":"true"}},[a._v("#")]),a._v(" 选择题")]),a._v(" "),t("h2",{attrs:{id:"q：下面不属于ecmascript规范的范围的是：c"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：下面不属于ecmascript规范的范围的是：c","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：下面不属于ECMAScript规范的范围的是：c")]),a._v(" "),t("p",[a._v("A、数据类型\nB、语法\nC、DOM事件\nD、内置对象和函数的标准库")]),a._v(" "),t("h2",{attrs:{id:"q：下面不属于关键字let的特点的是：b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：下面不属于关键字let的特点的是：b","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：下面不属于关键字let的特点的是：b")]),a._v(" "),t("p",[a._v("A、只在 let 命令所在的代码块内有效\nB、会产生变量提升现象\nC、同一个作用域，不能重复声明同一个变量\nD、不能在函数内部重新声明参数")]),a._v(" "),t("h2",{attrs:{id:"q：关于关键字const，下列说法错误的是：d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于关键字const，下列说法错误的是：d","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于关键字const，下列说法错误的是：d")]),a._v(" "),t("p",[a._v("A、用于声明常量，声明后不可修改\nB、不会发生变量提升现象\nC、不能重复声明同一个变量\nD、可以先声明，不赋值。")]),a._v(" "),t("h2",{attrs:{id:"q：在数组的解构赋值中，var-a-b-c-1-2-结果中，a、b、c的值分别是：b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：在数组的解构赋值中，var-a-b-c-1-2-结果中，a、b、c的值分别是：b","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：在数组的解构赋值中，var [ a,b,c ] = [ 1,2 ]结果中，a、b、c的值分别是：b")]),a._v(" "),t("p",[a._v("A、1  2  null\nB、1  2  undefined\nC、1  2  2\nD、抛出异常")]),a._v(" "),t("h2",{attrs:{id:"q：在对象的解构赋值中，var-a-b-c-“c”-10-”b”-9-”a”-8-结果中，a、b、c的值分别是：b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：在对象的解构赋值中，var-a-b-c-“c”-10-”b”-9-”a”-8-结果中，a、b、c的值分别是：b","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：在对象的解构赋值中，var {a,b,c} = { “c”:10, ”b”:9, ”a”:8 } 结果中，a、b、c的值分别是：b")]),a._v(" "),t("p",[a._v("A、10  9  8\nB、8  9  10\nC、undefined  9  undefined\nD、null  9  null")]),a._v(" "),t("h2",{attrs:{id:"q：关于模板字符串，下列说法不正确的是：c"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于模板字符串，下列说法不正确的是：c","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于模板字符串，下列说法不正确的是：c")]),a._v(" "),t("p",[a._v("A、使用反引号标识\nB、插入变量的时候使用${ }\nC、所有的空格和缩进都会被保留在输出中\nD、${ }中的表达式不能是函数的调用")]),a._v(" "),t("h2",{attrs:{id:"q：关于字符串扩展的新函数，下面描述错误的是：a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于字符串扩展的新函数，下面描述错误的是：a","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于字符串扩展的新函数，下面描述错误的是：a")]),a._v(" "),t("p",[a._v("A、includes函数用于判断字符串中是否含有指定的子字符串\nB、repeat函数将目标字符串重复N次，目标字符串被修改\nC、startsWidth函数判断指定的子字符串是否出现在目标字符串头部位置\nD、endWidth函数判断指定的子字符串是否出现在目标字符串尾部位置")]),a._v(" "),t("h2",{attrs:{id:"q：关于数值的扩展，window-isnan-“abc”-和number-isnan-“abc”-的结果分别是：b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于数值的扩展，window-isnan-“abc”-和number-isnan-“abc”-的结果分别是：b","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于数值的扩展，window.isNaN(“abc”) 和Number.isNaN(“abc”)的结果分别是：b")]),a._v(" "),t("p",[a._v("A、true   false\nB、false   true\nC、true   true\nD、false   false")]),a._v(" "),t("h2",{attrs:{id:"q：关于数值扩展的number-isinteger函数，下面说法错误的是：d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于数值扩展的number-isinteger函数，下面说法错误的是：d","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于数值扩展的Number.isInteger函数，下面说法错误的是：d")]),a._v(" "),t("p",[a._v("A、用来判断是否是整数，返回布尔值。\nB、Number.isInteger(3);结果为：true\nC、Number.isInteger(3.0);结果为：false\nD、Number.isInteger(3.01);结果为：false")]),a._v(" "),t("h2",{attrs:{id:"q：数组扩展的fill-函数，-1-2-3-fill-4-的结果是：d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：数组扩展的fill-函数，-1-2-3-fill-4-的结果是：d","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：数组扩展的fill( )函数，[1,2,3].fill(4)的结果是：d")]),a._v(" "),t("p",[a._v("A、[4]\nB、[1,2,3,4]\nC、[4,1,2,3]\nD、[4,4,4]")]),a._v(" "),t("h2",{attrs:{id:"q：数组的扩展中，不属于用于数组遍历的函数的是：d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：数组的扩展中，不属于用于数组遍历的函数的是：d","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：数组的扩展中，不属于用于数组遍历的函数的是：d")]),a._v(" "),t("p",[a._v("A、keys( )\nB、entries( )\nC、values( )\nD、find( )")]),a._v(" "),t("h2",{attrs:{id:"q：关于对象的扩展，错误的是：b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于对象的扩展，错误的是：b","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于对象的扩展，错误的是：b")]),a._v(" "),t("p",[a._v("A、ES6中对象的表示法更加简洁\nB、对象的属性名可以是表达式\nC、对象的方法名不可以是表达式\nD、当属性名为表达式的时候，需要使用[ ]标识")]),a._v(" "),t("h2",{attrs:{id:"q：关于对象的object-is函数，错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于对象的object-is函数，错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于对象的Object.is函数，错误的是：")]),a._v(" "),t("p",[a._v("A、用于判断两个值是否严格相等\nB、用于判断两个值是否抽象相等\nC、Object.is(3,'3') 结果是：false\nD、Object.is(3,3.0) 结果是：true")]),a._v(" "),t("h2",{attrs:{id:"q：函数的扩展中，关于rest参数的描述，正确的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：函数的扩展中，关于rest参数的描述，正确的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：函数的扩展中，关于rest参数的描述，正确的是：")]),a._v(" "),t("p",[a._v("A、获取函数剩下部分的参数\nB、rest参数不可以是函数的最后一个参数\nC、获取函数的第一个参数\nD、一个名叫rest的参数")]),a._v(" "),t("h2",{attrs:{id:"q：关于箭头函数的描述，错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于箭头函数的描述，错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于箭头函数的描述，错误的是：")]),a._v(" "),t("p",[a._v("A、使用箭头符号=>定义\nB、参数超过1个的话，需要用小括号（）括起来\nC、函数体语句超过1条的时候，需要用大括号{ }括起来，用return语句返回\nD、函数体内的 this 对象，绑定使用时所在的对象")]),a._v(" "),t("h2",{attrs:{id:"q：关于symbol，错误的说法是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于symbol，错误的说法是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Symbol，错误的说法是：")]),a._v(" "),t("p",[a._v("A、是ES6新增的一种数据类型\nB、Symbol() === Symbol() 结果为false\nC、Symbol('same') === Symbol('same') 结果为true\nD、当symbol值作为对象的属性名的时候，不能用点运算符获取对应的值。")]),a._v(" "),t("h2",{attrs:{id:"q：下面运算结果，结果为true的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：下面运算结果，结果为true的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：下面运算结果，结果为true的是：")]),a._v(" "),t("p",[a._v("A、Symbol.for('name') == Symbol.for('name')\nB、Symbol('name') == Symbol.for('name')\nC、Symbol('name') == Symbol('name')\nD、Symbol.for('name') == Symbol('name')")]),a._v(" "),t("h2",{attrs:{id:"q：关于proxy代理，下面说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于proxy代理，下面说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Proxy代理，下面说法错误的是：")]),a._v(" "),t("p",[a._v("A、可以理解成在目标对象之前，架设一层“拦截”\nB、Proxy的get 方法用于拦截某个属性的读取操作。\nC、Proxy的set方法用于拦截对对象的写操作。\nD、一旦对象设置Proxy代理后不可取消，所以要谨慎操作")]),a._v(" "),t("h2",{attrs:{id:"q：关于for-of的简述，说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于for-of的简述，说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于for...of的简述，说法错误的是：")]),a._v(" "),t("p",[a._v("A、它可以遍历所有具有iterator 接口的数据结构\nB、不可以用break来终止循环\nC、使用continue可以跳过当前循环\nD、可以遍历DOM list对象")]),a._v(" "),t("h2",{attrs:{id:"q：关于set结构，下面说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于set结构，下面说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于set结构，下面说法错误的是：")]),a._v(" "),t("p",[a._v("A、创建一个实例需要用new关键字\nB、结构成员都是唯一的，不允许重复\nC、使用add方法添加已经存在的成员会报错\nD、初始化的时候接受数组作为参数")]),a._v(" "),t("h2",{attrs:{id:"q：关于set结构的实例方法，下面说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于set结构的实例方法，下面说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Set结构的实例方法，下面说法错误的是：")]),a._v(" "),t("p",[a._v("A、set方法用于添加成员\nB、clear方法用于清除所有成员。\nC、entries方法返回成员的位置索引和值的遍历器\nD、values方法返回成员值的便利器")]),a._v(" "),t("h2",{attrs:{id:"q：关于weakset结构，说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于weakset结构，说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于WeakSet结构，说法错误的是：")]),a._v(" "),t("p",[a._v("A、与Set结构一样，成员值都是唯一\nB、成员值必须是对象\nC、WeakSet 中的对象都是弱引用\nD、可以forEach( )方法实现遍历")]),a._v(" "),t("h2",{attrs:{id:"q：关于map结构的介绍，下面说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于map结构的介绍，下面说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Map结构的介绍，下面说法错误的是：")]),a._v(" "),t("p",[a._v("A、是键值对的集合\nB、创建实例需要使用new关键字\nC、Map结构的键名必须是引用类型\nD、Map结构是可遍历的")]),a._v(" "),t("h2",{attrs:{id:"q：下列map结构的键名数据类型，描述错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：下列map结构的键名数据类型，描述错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：下列Map结构的键名数据类型，描述错误的是：")]),a._v(" "),t("p",[a._v("A、键名可以是数组类型的值\nB、键名可以是Symbol类型的值\nC、键名值可以是null\nD、键名值不可以为undefined")]),a._v(" "),t("h2",{attrs:{id:"q：关于weakmap结构，下列说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于weakmap结构，下列说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于WeakMap结构，下列说法错误的是：")]),a._v(" "),t("p",[a._v("A、创建实例需要使用new关键字\nB、键名可以是任何类型的值\nC、WeakMap结构不支持clear方法\nD、WeakMap结构不可遍历")]),a._v(" "),t("h2",{attrs:{id:"q：es6的新特性promise对象的设计初衷是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：es6的新特性promise对象的设计初衷是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：ES6的新特性Promise对象的设计初衷是：")]),a._v(" "),t("p",[a._v("A、更好地实现遍历具有iterator接口的数据结构\nB、为对象的操作增加了一层“拦截”\nC、独一无二的值，用于对象属性，避免属性名冲突\nD、让开发者更合理、更规范地用于处理异步操作")]),a._v(" "),t("h2",{attrs:{id:"q：关于promise对象的状态，下列说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于promise对象的状态，下列说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Promise对象的状态，下列说法错误的是：")]),a._v(" "),t("p",[a._v("A、三种状态分别是：pending初始状态、fulfilled成功、rejected失败\nB、pending初始状态可以状变成fulfilled成功\nC、rejected失败不可以状变成pending初始状态\nD、rejected失败可以状变成fulfilled成功")]),a._v(" "),t("h2",{attrs:{id:"q：下面关于类class的描述，错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：下面关于类class的描述，错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：下面关于类class的描述，错误的是：")]),a._v(" "),t("p",[a._v("A、JavaScript的类class本质上是基于原型prototype的实现方式做了进一步的封装\nB、constructor构造方法是必须的\nC、如果类的constructor构造方法有多个，后者会覆盖前者\nD、类的静态方法可以通过类名调用，不需要实例化")]),a._v(" "),t("h2",{attrs:{id:"q：javascript中类的继承使用的关键字是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：javascript中类的继承使用的关键字是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：JavaScript中类的继承使用的关键字是：")]),a._v(" "),t("p",[a._v("A、extends\nB、inherit\nC、extend\nD、base")]),a._v(" "),t("h2",{attrs:{id:"q：在类的继承中，关于super的说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：在类的继承中，关于super的说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：在类的继承中，关于super的说法错误的是：")]),a._v(" "),t("p",[a._v("A、在子类的构造函数，必须先调用super( )\nB、super相当于子类的引用\nC、先调用super( )，才可以使用this\nD、super( )相当于父类构造函数的调用")]),a._v(" "),t("h2",{attrs:{id:"q：下列数据结构中，不能被for-of遍历的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：下列数据结构中，不能被for-of遍历的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：下列数据结构中，不能被for...of遍历的是：")]),a._v(" "),t("p",[a._v("A、Array数组\nB、Object对象\nC、String字符串\nD、Set结构")]),a._v(" "),t("h2",{attrs:{id:"q：关于iterator遍历器的说法，错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于iterator遍历器的说法，错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Iterator遍历器的说法，错误的是：")]),a._v(" "),t("p",[a._v("A、next( )方法是Iterator遍历器的核心\nB、当next( )返回对象的done属性为fasle，遍历结束\nC、具有Iterator接口的对象视为可遍历对象\nD、可以自定义一个可遍历对象和其遍历行为")]),a._v(" "),t("h2",{attrs:{id:"q：关于新特性generator函数的描述，错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于新特性generator函数的描述，错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于新特性Generator函数的描述，错误的是：")]),a._v(" "),t("p",[a._v("A、Generator函数，又称生成器函数\nB、声明Generator函数的关键字是：function*\nC、Generator函数执行后得到的一个生成器\nD、使用return语句使Generator函数暂停执行，直到next方法的调用")]),a._v(" "),t("h2",{attrs:{id:"q：generator函数的yield关键字的作用是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：generator函数的yield关键字的作用是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：Generator函数的yield关键字的作用是：")]),a._v(" "),t("p",[a._v("A、停止执行\nB、退出函数\nC、暂停执行，等待next( )方法调用\nD、停止执行，可自行恢复执行")]),a._v(" "),t("h2",{attrs:{id:"q：在generator函数中，yield-语句的作用是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：在generator函数中，yield-语句的作用是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：在Generator函数中，"),t("code",[a._v("yield*")]),a._v("语句的作用是：")]),a._v(" "),t("p",[a._v("A、调用另外的Generator函数\nB、暂停执行，待next( )方法调用后恢复\nC、停止执行，退出函数\nD、调用任意的其他函数")]),a._v(" "),t("h2",{attrs:{id:"q：关于es6的module模块，下列说法错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于es6的module模块，下列说法错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于ES6的module模块，下列说法错误的是：")]),a._v(" "),t("p",[a._v("A、可以有效解决大型系统文件复杂的依赖问题\nB、使用export语句可以选择性地向外部暴露自己的属性或者方法\nC、使用import语句导入其他模块的属性或者方法\nD、目前大部分主流浏览器都支持module模块")]),a._v(" "),t("h2",{attrs:{id:"q：module模块中，对下列语句的描述，错误的是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：module模块中，对下列语句的描述，错误的是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：module模块中，对下列语句的描述，错误的是：")]),a._v(" "),t("p",[a._v("A、export 导出\nB、import 导入\nC、export default 默认导出\nD、import * as  重命名")]),a._v(" "),t("h2",{attrs:{id:"q：module模块中的注意事项，下列说法错误的："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：module模块中的注意事项，下列说法错误的：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：module模块中的注意事项，下列说法错误的：")]),a._v(" "),t("p",[a._v("A、除了对象类型以外，导出的属性对外都是只读的\nB、导入不存在的变量，值为undefined\nC、导入不存在的变量，程序会抛出异常\nD、可以为导入的属性和方法取任意名字")]),a._v(" "),t("h2",{attrs:{id:"q：想要获取map实例对象的成员数，利用的属性是："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：想要获取map实例对象的成员数，利用的属性是：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：想要获取Map实例对象的成员数，利用的属性是：")]),a._v(" "),t("p",[a._v("A、size\nB、length\nC、sum\nD、members")]),a._v(" "),t("h2",{attrs:{id:"q：关于定义常量的关键字const，定义一个object对象-“name”-”jack”-，再对属性name-的值进行修改，如：obj-name-“john”。下列说法正确的："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于定义常量的关键字const，定义一个object对象-“name”-”jack”-，再对属性name-的值进行修改，如：obj-name-“john”。下列说法正确的：","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于定义常量的关键字const，定义一个Object对象{“name”:”Jack”}，再对属性name 的值进行修改，如：obj.name = “John”。下列说法正确的：")]),a._v(" "),t("p",[a._v("A、修改常量，程序跑出异常\nB、程序不抛出异常，修改无效\nC、修改成功，name的值为John\nD、程序不抛出异常，name的值为undefined")]),a._v(" "),t("h1",{attrs:{id:"简答题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简答题目","aria-hidden":"true"}},[a._v("#")]),a._v(" 简答题目")]),a._v(" "),t("h2",{attrs:{id:"q：说出至少5个es6的新特性，并简述它们的作用。（简答题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：说出至少5个es6的新特性，并简述它们的作用。（简答题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：说出至少5个ES6的新特性，并简述它们的作用。（简答题）")]),a._v(" "),t("h2",{attrs:{id:"q：使用结构赋值，实现两个变量的值的交换（编程题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：使用结构赋值，实现两个变量的值的交换（编程题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：使用结构赋值，实现两个变量的值的交换（编程题）")]),a._v(" "),t("h2",{attrs:{id:"q：使用结构赋值，完成函数的参数默认值（编程题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：使用结构赋值，完成函数的参数默认值（编程题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：使用结构赋值，完成函数的参数默认值（编程题）")]),a._v(" "),t("h2",{attrs:{id:"q：利用数组推导，计算出数组-1-2-3-4-每一个元素的平方并组成新的数组。（编程题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：利用数组推导，计算出数组-1-2-3-4-每一个元素的平方并组成新的数组。（编程题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：利用数组推导，计算出数组 [1,2,3,4] 每一个元素的平方并组成新的数组。（编程题）")]),a._v(" "),t("h2",{attrs:{id:"q：使用模板字符串改写下面的代码。（es5-to-es6改写题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：使用模板字符串改写下面的代码。（es5-to-es6改写题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：使用模板字符串改写下面的代码。（ES5 to ES6改写题）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let iam  = "我是";\nlet name = "前端君";\nlet str  = "大家好，"+iam+name+",多指教。";\n')])])]),t("h2",{attrs:{id:"q：用对象的简洁表示法改写下面的代码。（es5-to-es6改写题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：用对象的简洁表示法改写下面的代码。（es5-to-es6改写题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：用对象的简洁表示法改写下面的代码。（ES5 to ES6改写题）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let name = "xxxx";\nlet obj = {\n    "name":name,\n    "say":function(){\n        alert(\'hello world\');\n    }\n};\n')])])]),t("h2",{attrs:{id:"q：用箭头函数的形式改写下面的代码。（es5-to-es6改写题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：用箭头函数的形式改写下面的代码。（es5-to-es6改写题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：用箭头函数的形式改写下面的代码。（ES5 to ES6改写题）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("arr.forEach(function (v,i) {\n    console.log(i);\n    console.log(v);\n});\n")])])]),t("h2",{attrs:{id:"q：设计一个对象，键名的类型至少包含一个symbol类型，并且实现遍历所有key。（编程题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：设计一个对象，键名的类型至少包含一个symbol类型，并且实现遍历所有key。（编程题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：设计一个对象，键名的类型至少包含一个symbol类型，并且实现遍历所有key。（编程题）")]),a._v(" "),t("h2",{attrs:{id:"q-有一本书的属性为：-“name”-“《es6基础系列》”-”price”：56-；要求使用proxy对象对其进行拦截处理，name属性对外为“《es6入门到懵逼》”-price属性为只读。（练习题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q-有一本书的属性为：-“name”-“《es6基础系列》”-”price”：56-；要求使用proxy对象对其进行拦截处理，name属性对外为“《es6入门到懵逼》”-price属性为只读。（练习题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q:有一本书的属性为：{“name”:“《ES6基础系列》”, ”price”：56 }；要求使用Proxy对象对其进行拦截处理，name属性对外为“《ES6入门到懵逼》”,price属性为只读。（练习题）")]),a._v(" "),t("h2",{attrs:{id:"q：阅读下面的代码，并用for-of改成它。（es5-to-es6改写题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：阅读下面的代码，并用for-of改成它。（es5-to-es6改写题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：阅读下面的代码，并用for...of改成它。（ES5 to ES6改写题）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let arr = [11,22,33,44,55];\nlet sum = 0;\nfor(let i=0;i<arr.length;i++){\n    sum += arr[i];\n}\n")])])]),t("h2",{attrs:{id:"q：关于set结构，阅读下面的代码，回答问题。（代码阅读题）。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于set结构，阅读下面的代码，回答问题。（代码阅读题）。","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Set结构，阅读下面的代码，回答问题。（代码阅读题）。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let s = new Set();\ns.add([1]);\ns.add([1]);\nconsole.log(s.size);\n")])])]),t("p",[a._v("问：打印出来的size的值是多少？")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("h2",{attrs:{id:"q：关于map结构，阅读下面的代码，回答问题。（代码阅读题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于map结构，阅读下面的代码，回答问题。（代码阅读题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Map结构，阅读下面的代码，回答问题。（代码阅读题）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let map = new Map();\nmap.set([1],"ES6系列");\nlet con = map.get([1]);\nconsole.log(con);\n')])])]),t("p",[a._v("问：打印出来的变量con的值是多少，为什么？")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("h2",{attrs:{id:"q：定义一个类animal，通过传参初始化它的类型，如：“猫科类”。它有一个实例方法：run，run函数体内容可自行定义。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：定义一个类animal，通过传参初始化它的类型，如：“猫科类”。它有一个实例方法：run，run函数体内容可自行定义。","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：定义一个类Animal，通过传参初始化它的类型，如：“猫科类”。它有一个实例方法：run，run函数体内容可自行定义。")]),a._v(" "),t("h2",{attrs:{id:"q-基于上一题animal类，定义一个子类cat并继承animal类。初始化cat类的昵称name和年龄age。并拥有实例方法eat，eat函数体内容可自行定义。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q-基于上一题animal类，定义一个子类cat并继承animal类。初始化cat类的昵称name和年龄age。并拥有实例方法eat，eat函数体内容可自行定义。","aria-hidden":"true"}},[a._v("#")]),a._v(" Q: 基于上一题Animal类，定义一个子类Cat并继承Animal类。初始化Cat类的昵称name和年龄age。并拥有实例方法eat，eat函数体内容可自行定义。")]),a._v(" "),t("h2",{attrs:{id:"q：利用module模块，实现两个模块a和b，a模块导出变量name，age和say方法。b模块只导入变量name和say方法，并且重命名name为nickname。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：利用module模块，实现两个模块a和b，a模块导出变量name，age和say方法。b模块只导入变量name和say方法，并且重命名name为nickname。","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：利用module模块，实现两个模块A和B，A模块导出变量name，age和say方法。B模块只导入变量name和say方法，并且重命名name为nickname。")])])},[],!1,null,null,null);e.default=s.exports}}]);