(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{307:function(e,t,r){"use strict";r.r(t);var n=r(38),s=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"模块化react和redux应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模块化react和redux应用","aria-hidden":"true"}},[e._v("#")]),e._v(" 模块化React和Redux应用")]),e._v(" "),r("p",[e._v("[TOC]")]),e._v(" "),r("h2",{attrs:{id:"模块化应用的要点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模块化应用的要点","aria-hidden":"true"}},[e._v("#")]),e._v(" 模块化应用的要点")]),e._v(" "),r("ul",[r("li",[e._v("用React和Redux来构建前端网页应用，这两者都奉行一个公式"),r("code",[e._v("UI=render(state)")]),e._v("，来生产用户界面。React才适合用于视图层面的东西，但是不能指望靠React来管理应用的状态，Redux才适合担当应用状态的管理工作")]),e._v(" "),r("li",[e._v("构架应用的考虑重点，代码文件的组织结构，确定模块的边界，Store的状态树设计")])]),e._v(" "),r("h2",{attrs:{id:"代码文件的组织方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代码文件的组织方式","aria-hidden":"true"}},[e._v("#")]),e._v(" 代码文件的组织方式")]),e._v(" "),r("ul",[r("li",[e._v("在MVC中应用代码分为Controller、Model、View，分别代表三种模块角色，就是把所有的Controller代码放在controllers目录下，把所有的Model代码放在models目录下，把View代码放在views目录下。这种组织代码的方式，叫做“按角色组织”（Organized by Roles）")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 传统MVC模式\ncontrollers/\n|----- todoController.js\n|----- filterController.js\nmodels/\n|----- todoModel.js\n|----- filterModel.js\nviews/\n|----- todo.js\n|----- todoItem.js\n|----- filter.js\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 传统MVC下的React+Redux项目结构\nreducers/ 包含所有Redux的reducer\n|----- todoReducer.js\n|----- filterReudcer.js\nactions/ 包含所有的action构造函数\n|----- todoAction.js\n|----- filterAction.js\ncomponents/ 包含所有的傻瓜组件\n|----- todoList.js\n|----- todoItem.js\n|----- filter.js\ncontainers/ 包含所有的容器组件\n|----- todoListContainer.js\n|----- todoItemContainer.js\n|----- filterContainer.js\n")])])]),r("h2",{attrs:{id:"按功能组织"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#按功能组织","aria-hidden":"true"}},[e._v("#")]),e._v(" 按功能组织")]),e._v(" "),r("ul",[r("li",[e._v("把完成同一应用功能的代码放在一个目录下面，一个应用包含多个角色的代码。在Redux中，不同的角色就是Reducer、action、view，而应用功能对应的就是用户界面上的交互模块。每个基本功能对应的其实是一个功能模块，每个功能模块对应一个目录，这个例子中todoList和filter，每个目录下包含同样名字的角色文件")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 按照功能组织代码\ntodoList/\n|----- actions.js 定义action构造函数，决定了这个功能模块可以接受的动作\n|----- actionType.js 定义了action类型\n|----- index.js 把所有的角色导入，然后统一导出\n|----- reducer.js 定义这个功能模块如何相应actions.js中定义的动作\n|----- views/ 包含这个功能模块中所有的React组件，包括傻瓜组件和容器组件\n        |------ component.js\n        |------ container.js\nfilter/\n|----- actions.js\n|----- actionType.js\n|----- index.js\n|----- reducer.js\n|----- views/\n        |----- component.js\n        |----- container.js    \n")])])]),r("h2",{attrs:{id:"模块接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模块接口","aria-hidden":"true"}},[e._v("#")]),e._v(" 模块接口")]),e._v(" "),r("ul",[r("li",[e._v("不同功能模块之间的依赖关系应该简单而且清晰，也就是所谓的 保持模块之间低耦合性")]),e._v(" "),r("li",[e._v("一个模块应该把自己的功能封装的很好，让外界不要太依赖与自己内部的结构，这样就不会因为内部的变化而影响外部模块的功能，这就是所谓的高内聚性")]),e._v(" "),r("li",[e._v("对于view和reducer，一个功能模块绝对只有一个根视图模块，一个功能模块也只应该有一个导出的reducer")]),e._v(" "),r("li",[e._v("状态树设计原则，一个模块控制一个状态节点，避免冗余数据，树形结构扁平")]),e._v(" "),r("li",[e._v("Store上的每个state都只能通过reducer来更改，而我们每个模块都有机会导出一个自己的reducer，这个导出的reducer只能最多更改Redux的状态树上的一个节点下的数据，因为reducer之间对状态树上的修改权是互斥的，不可能让两个reducer都可以修改同一个状态树上的节点")]),e._v(" "),r("li",[e._v("Redux Store上的全部状态，在任何时候，对任何模块都是开放的，通过store.getState()总能够读取当前整个状态树的数据，但是只能更新自己相关那一部分模块的数据")]),e._v(" "),r("li",[e._v("面向用户的应用出于性能的考虑，倾向于直接使用“去范式化”的应用。但是带来的问题就是维持数据一致性就会困难")]),e._v(" "),r("li",[e._v("我们在设计Redux Store的状态树时，要尽量保持树结构扁平。如果树结构层次很深，往往意味着树形很复杂，一个很复杂的状态树是难以管理的。从代码的角度出发，深层次树形状态结构会让代码冗长")])]),e._v(" "),r("p",[e._v("TODO")]),e._v(" "),r("ul",[r("li",[e._v("在理想的情况下，我们应该通过增加代码就能增加系统的功能，而不是通过对现有代码的修改来增加功能")]),e._v(" "),r("li",[e._v("状态树设计原则\n一个模块控制一个状态节点\n避免冗余数据\n树形结构扁平")])])])},[],!1,null,null,null);t.default=s.exports}}]);