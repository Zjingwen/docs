(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{279:function(a,e,t){"use strict";t.r(e);var s=t(38),n=Object(s.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("[TOC]")]),a._v(" "),t("h2",{attrs:{id:"q：说出至少5个es6的新特性，并简述它们的作用。（简答题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：说出至少5个es6的新特性，并简述它们的作用。（简答题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：说出至少5个ES6的新特性，并简述它们的作用。（简答题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("ol",[t("li",[a._v("let关键字，用于声明只在块级作用域起作用的变量。")]),a._v(" "),t("li",[a._v("const关键字，用于声明一个常量。")]),a._v(" "),t("li",[a._v("结构赋值，一种新的变量赋值方式。常用于交换变量值，提取函数返回值，设置默认值。")]),a._v(" "),t("li",[a._v("Symbol数据类型，定义一个独一无二的值。")]),a._v(" "),t("li",[a._v("Proxy代理，用于编写处理函数，来拦截目标对象的操作。")]),a._v(" "),t("li",[a._v("for...of遍历，可遍历具有iterator 接口的数据结构。")]),a._v(" "),t("li",[a._v("Set结构，存储不重复的成员值的集合。")]),a._v(" "),t("li",[a._v("Map结构，键名可以是任何类型的键值对集合。")]),a._v(" "),t("li",[a._v("Promise对象，更合理、规范地处理异步操作。")]),a._v(" "),t("li",[a._v("Class类定义类和更简便地实现类的继承。")])]),a._v(" "),t("h2",{attrs:{id:"q：使用结构赋值，实现两个变量的值的交换（编程题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：使用结构赋值，实现两个变量的值的交换（编程题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：使用结构赋值，实现两个变量的值的交换（编程题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h2",{attrs:{id:"q：使用结构赋值，完成函数的参数默认值（编程题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：使用结构赋值，完成函数的参数默认值（编程题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：使用结构赋值，完成函数的参数默认值（编程题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('function demo({name="前端君"}){\n    console.log(name);\n}\n')])])]),t("h2",{attrs:{id:"q：利用数组推导，计算出数组-1-2-3-4-每一个元素的平方并组成新的数组。（编程题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：利用数组推导，计算出数组-1-2-3-4-每一个元素的平方并组成新的数组。（编程题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：利用数组推导，计算出数组 [1,2,3,4] 每一个元素的平方并组成新的数组。（编程题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var arr1 = [1, 2, 3, 4];\nvar arr2 = [for (i of arr1) i * i];\nconsole.log(arr2);\n")])])]),t("h2",{attrs:{id:"q：使用模板字符串改写下面的代码。（es5-to-es6改写题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：使用模板字符串改写下面的代码。（es5-to-es6改写题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：使用模板字符串改写下面的代码。（ES5 to ES6改写题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let iam  = "我是";\nlet name = "前端君";\nlet str  = "大家好，"+iam+name+",多指教。";\n改写成：\nlet iam  = `我是`;\nlet name = `前端君`;\nlet str  = `大家好，${iam+name},多指教。`;\n')])])]),t("h2",{attrs:{id:"q：用对象的简洁表示法改写下面的代码。（es5-to-es6改写题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：用对象的简洁表示法改写下面的代码。（es5-to-es6改写题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：用对象的简洁表示法改写下面的代码。（ES5 to ES6改写题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let name = "前端君";\nlet obj = {\n    "name":name,\n    "say":function(){\n        alert(\'hello world\');\n    }\n};\n改写成：\nlet name = "前端君";\nlet obj = {\n    name,\n    say(){\n        alert(\'hello world\');\n    }\n};\n')])])]),t("h2",{attrs:{id:"q：用箭头函数的形式改写下面的代码。（es5-to-es6改写题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：用箭头函数的形式改写下面的代码。（es5-to-es6改写题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：用箭头函数的形式改写下面的代码。（ES5 to ES6改写题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("arr.forEach(function (v,i) {\n    console.log(i);\n    console.log(v);\n});\n改写成：\narr.forEach((v,i) => {\n    console.log(i);\n    console.log(v);\n});\n")])])]),t("h2",{attrs:{id:"q：设计一个对象，键名的类型至少包含一个symbol类型，并且实现遍历所有key。（编程题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：设计一个对象，键名的类型至少包含一个symbol类型，并且实现遍历所有key。（编程题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：设计一个对象，键名的类型至少包含一个symbol类型，并且实现遍历所有key。（编程题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let name = Symbol(\'name\');\nlet product = {\n    [name]:"洗衣机",\n    "price":799,\n};\n\nReflect.ownKeys(product);\n')])])]),t("h2",{attrs:{id:"q-有一本书的属性为：-“name”-“《es6基础系列》”-”price”：56-；要求使用proxy对象对其进行拦截处理，name属性对外为“《es6入门到懵逼》”-price属性为只读。（练习题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q-有一本书的属性为：-“name”-“《es6基础系列》”-”price”：56-；要求使用proxy对象对其进行拦截处理，name属性对外为“《es6入门到懵逼》”-price属性为只读。（练习题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q:有一本书的属性为：{“name”:“《ES6基础系列》”, ”price”：56 }；要求使用Proxy对象对其进行拦截处理，name属性对外为“《ES6入门到懵逼》”,price属性为只读。（练习题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let book = {\n    "name":"《ES6基础系列》",\n    "price":56,\n};\n\nlet proxy = new Proxy(book,{\n    get:function(target,property){\n        if(property === "name"){\n            return "《入门到懵逼》";\n        }else{\n            return target[property];\n        }\n    },\n    set:function(target,property,value){\n        if(property === \'price\'){\n            target[property] = 56;\n        }\n    }\n});\n')])])]),t("h2",{attrs:{id:"q：阅读下面的代码，并用for-of改成它。（es5-to-es6改写题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：阅读下面的代码，并用for-of改成它。（es5-to-es6改写题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：阅读下面的代码，并用for...of改成它。（ES5 to ES6改写题）")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let arr = [11,22,33,44,55];\nlet sum = 0;\nfor(let i=0;i<arr.length;i++){\n    sum += arr[i];\n}\n改写：\nlet arr = [11,22,33,44,55];\nlet sum = 0;\nfor(value of arr){\n    sum += value;\n}\n")])])]),t("h2",{attrs:{id:"q：关于set结构，阅读下面的代码，回答问题。（代码阅读题）。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于set结构，阅读下面的代码，回答问题。（代码阅读题）。","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Set结构，阅读下面的代码，回答问题。（代码阅读题）。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let s = new Set();\ns.add([1]);\ns.add([1]);\nconsole.log(s.size);\n")])])]),t("p",[a._v("问：打印出来的size的值是多少？")]),a._v(" "),t("p",[a._v("答：2。如果回答为1的同学，多必是记得Set结构是不会存储相同的值。其实在这个案例中，两个数组[1]并不是同一个值，它们分别定义的数组，在内存中分别对应着不同的存储地址，因此并不是相同的值。所以都能存储到Set结构中，size为2。")]),a._v(" "),t("h2",{attrs:{id:"q：关于map结构，阅读下面的代码，回答问题。（代码阅读题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：关于map结构，阅读下面的代码，回答问题。（代码阅读题）","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：关于Map结构，阅读下面的代码，回答问题。（代码阅读题）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let map = new Map();\nmap.set([1],"ES6系列");\nlet con = map.get([1]);\nconsole.log(con);\n')])])]),t("p",[a._v("问：打印出来的变量con的值是多少，为什么？")]),a._v(" "),t("p",[a._v("答：undefined。因为set的时候用的数组[1]和get的时候用的数组[1]是分别两个不同的数组，只不过它们元素都是1。它们是分别定义的两个数组，并不是同一个值。新手避免在这里犯错。如果想达到预期的效果，你要保证get的时候和set的时候用同一个数组。比如：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('let map = new Map();\nlet arr = [1];\nmap.set(arr,"ES6系列");\nlet con = map.get(arr);\nconsole.log(con);\n')])])]),t("p",[a._v("这样的得到的变量con的值就是：“ES6系列”。")]),a._v(" "),t("h2",{attrs:{id:"q：定义一个类animal，通过传参初始化它的类型，如：“猫科类”。它有一个实例方法：run，run函数体内容可自行定义。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：定义一个类animal，通过传参初始化它的类型，如：“猫科类”。它有一个实例方法：run，run函数体内容可自行定义。","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：定义一个类Animal，通过传参初始化它的类型，如：“猫科类”。它有一个实例方法：run，run函数体内容可自行定义。")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("class Animal {\n    constructor(type){\n        this.type = type;\n    }\n    \n    run(){\n        alert('I can run');\n    }\n}\n")])])]),t("p",[a._v("基于第12题的Animal类，定义一个子类Cat并继承Animal类。初始化Cat类的昵称name和年龄age。并拥有实例方法eat，eat函数体内容可自行定义。")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("class Cat extends Animal{\n    constructor(type,name,age){\n        super(type);\n        this.name = name;\n        this.age = age;\n    }\n    \n    eat(){\n        alert('I am eating');\n    }\n}\n")])])]),t("h2",{attrs:{id:"q：利用module模块，实现两个模块a和b，a模块导出变量name，age和say方法。b模块只导入变量name和say方法，并且重命名name为nickname。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：利用module模块，实现两个模块a和b，a模块导出变量name，age和say方法。b模块只导入变量name和say方法，并且重命名name为nickname。","aria-hidden":"true"}},[a._v("#")]),a._v(" Q：利用module模块，实现两个模块A和B，A模块导出变量name，age和say方法。B模块只导入变量name和say方法，并且重命名name为nickname。")]),a._v(" "),t("p",[a._v("答：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('//-----模块A-------\nvar name = "kitty";\nvar age = 15;\nvar say = function(){\n    //....\n};\nexport {name,age,say}\n//---module-B.js文件---\nimport { name as nickname, say } from "模块A的相对路径";\n')])])])])},[],!1,null,null,null);e.default=n.exports}}]);