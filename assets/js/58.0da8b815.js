(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{288:function(t,s,a){"use strict";a.r(s);var n=a(38),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"题目集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目集合","aria-hidden":"true"}},[t._v("#")]),t._v(" 题目集合")]),t._v(" "),a("p",[t._v("Q：下面不属于ECMAScript规范的范围的是："),a("br"),t._v("\nA、数据类型"),a("br"),t._v("\nB、语法"),a("br"),t._v("\nC、DOM事件"),a("br"),t._v("\nD、内置对象和函数的标准库")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：DOM事件不属于ECMAScript的部分；ECMAScript定义的内容：语法、类型、原型和继承、内置对象和函数的标准库。"),a("br"),t._v("\n考点： ECMAScript定义规范的理解，来自《第一节：什么是ES6？新手该如何理解》的内容。")])]),t._v(" "),a("p",[t._v("Q：下面不属于关键字let的特点的是："),a("br"),t._v("\nA、只在 let 命令所在的代码块内有效"),a("br"),t._v("\nB、会产生变量提升现象"),a("br"),t._v("\nC、同一个作用域，不能重复声明同一个变量"),a("br"),t._v("\nD、不能在函数内部重新声明参数")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：使用var关键字才会产生变量提升的现象。关键字let不会产生变量提升现象，所以必须先声明定义后使用，否则程序抛出异常。"),a("br"),t._v("\n考点：关键字let的使用注意事项，来自《第二节：ES6新增了let关键字，干嘛用的？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于关键字const，下列说法错误的是："),a("br"),t._v("\nA、用于声明常量，声明后不可修改"),a("br"),t._v("\nB、不会发生变量提升现象"),a("br"),t._v("\nC、不能重复声明同一个变量"),a("br"),t._v("\nD、可以先声明，不赋值。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：声明后必须赋值，负责程序会抛出异常。"),a("br"),t._v("\n考点：关键字const的使用注意事项，来自 《第三节:ES6中另一个不得不说的关键字const》的内容。")])]),t._v(" "),a("p",[t._v("Q：在数组的解构赋值中，var [ a,b,c ] = [ 1,2 ]结果中，a、b、c的值分别是："),a("br"),t._v("\nA、1  2  null"),a("br"),t._v("\nB、1  2  undefined"),a("br"),t._v("\nC、1  2  2"),a("br"),t._v("\nD、抛出异常")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：在解构赋值过程中，赋值不成功，变量的值会变成undefined，不会抛出异常。"),a("br"),t._v("\n考点：数组的结构赋值使用注意事项。来自 《第五节：一个令人兴奋的ES6新特性：解构赋值》的内容。")])]),t._v(" "),a("p",[t._v("Q：在对象的解构赋值中，var {a,b,c} = { “c”:10, ”b”:9, ”a”:8 } 结果中，a、b、c的值分别是："),a("br"),t._v("\nA、10  9  8"),a("br"),t._v("\nB、8  9  10"),a("br"),t._v("\nC、undefined  9  undefined"),a("br"),t._v("\nD、null  9  null")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：对象的解构赋值不会受到属性的排列次序影响。"),a("br"),t._v("\n考点：对象解构赋值和数组解构赋值的区别。来自 《第五节：一个令人兴奋的ES6新特性：解构赋值》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于模板字符串，下列说法不正确的是："),a("br"),t._v("\nA、使用反引号标识"),a("br"),t._v("\nB、插入变量的时候使用${ }"),a("br"),t._v("\nC、所有的空格和缩进都会被保留在输出中"),a("br"),t._v("\nD、${ }中的表达式不能是函数的调用")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：${ }中可以放任意的JavaScript表达式，包括运算表达式、对象属性、函数调用等。"),a("br"),t._v("\n考点：模板字符串的特点。来自《第六节：ES6为字符串String带来哪些好玩的特性？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于字符串扩展的新函数，下面描述错误的是："),a("br"),t._v("\nA、includes函数用于判断字符串中是否含有指定的子字符串"),a("br"),t._v("\nB、repeat函数将目标字符串重复N次，目标字符串被修改"),a("br"),t._v("\nC、startsWidth函数判断指定的子字符串是否出现在目标字符串头部位置"),a("br"),t._v("\nD、endWidth函数判断指定的子字符串是否出现在目标字符串尾部位置")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：repeat函数将目标字符串重复N次，会返回一个新的字符串，不影响目标字符串。"),a("br"),t._v("\n考点：String字符串的新特性repeat函数的使用。来自《第六节：ES6为字符串String带来哪些好玩的特性？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于数值的扩展，window.isNaN(“abc”) 和Number.isNaN(“abc”)的结果分别是："),a("br"),t._v("\nA、true   false"),a("br"),t._v("\nB、false   true"),a("br"),t._v("\nC、true   true"),a("br"),t._v("\nD、false   false")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：A")]),t._v(" "),a("p",[t._v("解析：window.isNaN函数会把非数值的参数转化成数值再进行判断，而Number. isNaN只对数值类型有效，非数值类型的参数一律返回false。"),a("br"),t._v("\n考点：isNaN函数从全局函数移植到Number对象后的区别。来自《第七节：ES6为数值做了哪些扩展？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于数值扩展的Number.isInteger函数，下面说法错误的是："),a("br"),t._v("\nA、用来判断是否是整数，返回布尔值。"),a("br"),t._v("\nB、Number.isInteger(3);结果为：true"),a("br"),t._v("\nC、Number.isInteger(3.0);结果为：false"),a("br"),t._v("\nD、Number.isInteger(3.01);结果为：false")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：在JavaScript内部对整数和浮点数采用一样的存储方式，因此小数点后如果都是0的浮点数，都会被认为是整数。"),a("br"),t._v("\n考点：Number.isInteger函数使用的注意事项。来自《第七节：ES6为数值做了哪些扩展？》的内容。")])]),t._v(" "),a("p",[t._v("Q：数组扩展的fill( )函数，[1,2,3].fill(4)的结果是："),a("br"),t._v("\nA、[4]"),a("br"),t._v("\nB、[1,2,3,4]"),a("br"),t._v("\nC、[4,1,2,3]"),a("br"),t._v("\nD、[4,4,4]")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：fill函数的参数会把原数组的每个元素填充成指定的参数。"),a("br"),t._v("\n考点：对fill( )函数的了解和使用。来自《第八节：ES6为数组做了哪些扩展？》的内容。")])]),t._v(" "),a("p",[t._v("Q：数组的扩展中，不属于用于数组遍历的函数的是："),a("br"),t._v("\nA、keys( )"),a("br"),t._v("\nB、entries( )"),a("br"),t._v("\nC、values( )"),a("br"),t._v("\nD、find( )")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：find函数用于找出数组中符合条件的第一个元素，并不是用于遍历数组。"),a("br"),t._v("\n考点：利用数组的新特性来实现数组的遍历。来自《第八节：ES6为数组做了哪些扩展？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于对象的扩展，错误的是："),a("br"),t._v("\nA、ES6中对象的表示法更加简洁"),a("br"),t._v("\nB、对象的属性名可以是表达式"),a("br"),t._v("\nC、对象的方法名不可以是表达式"),a("br"),t._v("\nD、当属性名为表达式的时候，需要使用[ ]标识")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：对象的方法名同样可以是表达式，使用[ ]标识。"),a("br"),t._v("\n考点：对象的新特性的使用注意事项。来自《第九节：ES6为对象做了哪些扩展？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于对象的Object.is函数，错误的是："),a("br"),t._v("\nA、用于判断两个值是否严格相等"),a("br"),t._v("\nB、用于判断两个值是否抽象相等"),a("br"),t._v("\nC、Object.is(3,'3') 结果是：false"),a("br"),t._v("\nD、Object.is(3,3.0) 结果是：true")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：Object.is函数判断两个值是否严格相等，或者说全等，作用等同于全等符号：==="),a("br"),t._v("\n考点：Object.is函数的了解和使用注意事项。来自《第九节：ES6为对象做了哪些扩展？》的内容。")])]),t._v(" "),a("p",[t._v("Q：函数的扩展中，关于rest参数的描述，正确的是："),a("br"),t._v("\nA、获取函数剩下部分的参数"),a("br"),t._v("\nB、rest参数不可以是函数的最后一个参数"),a("br"),t._v("\nC、获取函数的第一个参数"),a("br"),t._v("\nD、一个名叫rest的参数")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：A")]),t._v(" "),a("p",[t._v("解析：rest参数用于表示且必须是函数的最后一个函数，后面不可以再跟其他参数，故B选项是错的。它的表示法表示法使用...（三个点）+ 自定义的参数名，故D选项是错的"),a("br"),t._v("\n考点：rest参数的理解和使用。来自《第十节：ES6为函数做了哪些扩展？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于箭头函数的描述，错误的是："),a("br"),t._v("\nA、使用箭头符号=>定义"),a("br"),t._v("\nB、参数超过1个的话，需要用小括号（）括起来"),a("br"),t._v("\nC、函数体语句超过1条的时候，需要用大括号{ }括起来，用return语句返回"),a("br"),t._v("\nD、函数体内的 this 对象，绑定使用时所在的对象")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：函数体内的 this 对象，绑定定义时所在的对象，而不是使用时所在的对象。这点很重要，连载第十节的时候还特意加了一节讲这个内容。"),a("br"),t._v("\n考点：箭头函数的使用注意事项。来自《第十节（补课）：函数的扩展 — 箭头函数的this使用》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于Symbol，错误的说法是："),a("br"),t._v("\nA、是ES6新增的一种数据类型"),a("br"),t._v("\nB、Symbol() === Symbol() 结果为false"),a("br"),t._v("\nC、Symbol('same') === Symbol('same') 结果为true"),a("br"),t._v("\nD、当symbol值作为对象的属性名的时候，不能用点运算符获取对应的值。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：symbol是独一无二的值，虽然它们的描述都是“'same'”，但是对应的值还是不一样的，所以结果为：false。"),a("br"),t._v("\n考点：关于Symbol的使用注意事项，来自《第十一节：JavaScript有了一种全新的数据类型：Symbol》的内容。")])]),t._v(" "),a("p",[t._v("Q：下面运算结果，结果为true的是："),a("br"),t._v("\nA、Symbol.for('name') == Symbol.for('name')"),a("br"),t._v("\nB、Symbol('name') == Symbol.for('name')"),a("br"),t._v("\nC、Symbol('name') == Symbol('name')"),a("br"),t._v("\nD、Symbol.for('name') == Symbol('name')")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：A")]),t._v(" "),a("p",[t._v("解析：Symbol.for函数会根据参数名，去全局环境中搜索是否有以该参数为名的symbol值，有就返回它，没有就以该参数名来创建一个新的symbol值，并登记在全局环境中，而Symbol每次都会创建一个独一无二的值，不会登记在全局环境中。"),a("br"),t._v("\n考点：Symbol和Symbol.for创建变量的区别，来自《第十一节：JavaScript有了一种全新的数据类型：Symbol》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于Proxy代理，下面说法错误的是："),a("br"),t._v("\nA、可以理解成在目标对象之前，架设一层“拦截”"),a("br"),t._v("\nB、Proxy的get 方法用于拦截某个属性的读取操作。"),a("br"),t._v("\nC、Proxy的set方法用于拦截对对象的写操作。"),a("br"),t._v("\nD、一旦对象设置Proxy代理后不可取消，所以要谨慎操作")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：可以用Proxy.revocable( )来取消代理，并不是不可以取消的。"),a("br"),t._v("\n考点：Proxy代理的设置和取消代理，来自《第十二节：ES6 Proxy代理 和 去银行存款有什么关系？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于for...of的简述，说法错误的是："),a("br"),t._v("\nA、它可以遍历所有具有iterator 接口的数据结构"),a("br"),t._v("\nB、不可以用break来终止循环"),a("br"),t._v("\nC、使用continue可以跳过当前循环"),a("br"),t._v("\nD、可以遍历DOM list对象")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：for...of可以用break来终止循环，而传统的forEach则不可以用break终止循环，这正是for...of相对forEach的优势"),a("br"),t._v("\n考点：for...of遍历相对于传统便利方式的优势，来自《第十三节：易学又实用的新特性：for...of》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于set结构，下面说法错误的是："),a("br"),t._v("\nA、创建一个实例需要用new关键字"),a("br"),t._v("\nB、结构成员都是唯一的，不允许重复"),a("br"),t._v("\nC、使用add方法添加已经存在的成员会报错"),a("br"),t._v("\nD、初始化的时候接受数组作为参数")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：使用add方法添加已经存在的成员，会自动忽略相同的值，相同的值保留一个。"),a("br"),t._v("\n考点：set结构的特点，来自《第十六节：ES6新增的 Set 和 WeakSet 是什么东西？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于Set结构的实例方法，下面说法错误的是："),a("br"),t._v("\nA、set方法用于添加成员"),a("br"),t._v("\nB、clear方法用于清除所有成员。"),a("br"),t._v("\nC、entries方法返回成员的位置索引和值的遍历器"),a("br"),t._v("\nD、values方法返回成员值的便利器")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：返回的是键名和键值的遍历器；特别注意的是：set结构的键名和键值是同一个值。"),a("br"),t._v("\n考点：set结构键名和键值的特点，来自《第十六节：ES6新增的 Set 和 WeakSet 是什么东西？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于WeakSet结构，说法错误的是："),a("br"),t._v("\nA、与Set结构一样，成员值都是唯一"),a("br"),t._v("\nB、成员值必须是对象"),a("br"),t._v("\nC、WeakSet 中的对象都是弱引用"),a("br"),t._v("\nD、可以forEach( )方法实现遍历")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：WeakSet结构是不可遍历的，所以它不存在forEach方法，以及keys()、values()、entries()方法，这是它和Set结构不同处之一。"),a("br"),t._v("\n考点：Set和WeakSet的不同点，来自《第十六节：ES6新增的 Set 和 WeakSet 是什么东西？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于Map结构的介绍，下面说法错误的是："),a("br"),t._v("\nA、是键值对的集合"),a("br"),t._v("\nB、创建实例需要使用new关键字"),a("br"),t._v("\nC、Map结构的键名必须是引用类型"),a("br"),t._v("\nD、Map结构是可遍历的")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：键名可以是任何数据类型，这是Map结构的最大特性，也是Map结构和传统对象Object最大的区别。"),a("br"),t._v("\n考点：Map结构的键名特点，来自《第十七节：ES6新增的Map和WeakMap 又是什么东西？》的内容。")])]),t._v(" "),a("p",[t._v("Q：下列Map结构的键名数据类型，描述错误的是："),a("br"),t._v("\nA、键名可以是数组类型的值"),a("br"),t._v("\nB、键名可以是Symbol类型的值"),a("br"),t._v("\nC、键名值可以是null"),a("br"),t._v("\nD、键名值不可以为undefined")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：undefined也可以做为Map结构的键名。"),a("br"),t._v("\n考点：Map结构键名的值类型，来自《第十七节：ES6新增的Map和WeakMap 又是什么东西？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于WeakMap结构，下列说法错误的是："),a("br"),t._v("\nA、创建实例需要使用new关键字"),a("br"),t._v("\nB、键名可以是任何类型的值"),a("br"),t._v("\nC、WeakMap结构不支持clear方法"),a("br"),t._v("\nD、WeakMap结构不可遍历")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：WeakMap结构的键名必须是引用类型的值，也是它和Map最大不同之处。"),a("br"),t._v("\n考点：Map和WeakMap的不同点，来自《第十七节：ES6新增的Map和WeakMap 又是什么东西？》的内容。")])]),t._v(" "),a("p",[t._v("Q：ES6的新特性Promise对象的设计初衷是："),a("br"),t._v("\nA、更好地实现遍历具有iterator接口的数据结构"),a("br"),t._v("\nB、为对象的操作增加了一层“拦截”"),a("br"),t._v("\nC、独一无二的值，用于对象属性，避免属性名冲突"),a("br"),t._v("\nD、让开发者更合理、更规范地用于处理异步操作")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：遍历具有iterator接口的数据结构是for...of的作用；为对象的操作增加了一层“拦截”是Proxy代理的设计初衷；独一无二的值，避免属性名冲突是Symbol的设计初衷。而D选项，是Promise对象的设计初衷。"),a("br"),t._v("\n考点：Promise对象的作用，来自《第十八节：教你如何使用ES6的Promise对象》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于Promise对象的状态，下列说法错误的是："),a("br"),t._v("\nA、三种状态分别是：pending初始状态、fulfilled成功、rejected失败"),a("br"),t._v("\nB、pending初始状态可以状变成fulfilled成功"),a("br"),t._v("\nC、rejected失败不可以状变成pending初始状态"),a("br"),t._v("\nD、rejected失败可以状变成fulfilled成功")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：A、B、C的说法都是正确的，rejected失败和fulfilled成功之间不能相互转换，故D选项是错误的。"),a("br"),t._v("\n考点：Promise对象三种状态的转换关系，来自《第十八节：教你如何使用ES6的Promise对象》的内容。")])]),t._v(" "),a("p",[t._v("Q：下面关于类class的描述，错误的是："),a("br"),t._v("\nA、JavaScript的类class本质上是基于原型prototype的实现方式做了进一步的封装"),a("br"),t._v("\nB、constructor构造方法是必须的"),a("br"),t._v("\nC、如果类的constructor构造方法有多个，后者会覆盖前者"),a("br"),t._v("\nD、类的静态方法可以通过类名调用，不需要实例化")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：同一个类的constructor构造方法只能有一个，否则程序会报错。"),a("br"),t._v("\n考点：类class的声明，来自《第十九节：终于，JavaScript也有了类（class）的概念》的内容。")])]),t._v(" "),a("p",[t._v("Q：JavaScript中类的继承使用的关键字是："),a("br"),t._v("\nA、extends"),a("br"),t._v("\nB、inherit"),a("br"),t._v("\nC、extend"),a("br"),t._v("\nD、base")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：A")]),t._v(" "),a("p",[t._v("解析：extends才是JavaScript中类的继承关键字，其他的选项都不是。"),a("br"),t._v("\n考点：类的继承知识，来自《第十九节：终于，JavaScript也有了类（class）的概念》的内容。")])]),t._v(" "),a("p",[t._v("Q：在类的继承中，关于super的说法错误的是："),a("br"),t._v("\nA、在子类的构造函数，必须先调用super( )"),a("br"),t._v("\nB、super相当于子类的引用"),a("br"),t._v("\nC、先调用super( )，才可以使用this"),a("br"),t._v("\nD、super( )相当于父类构造函数的调用")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：super是父类的引用，我们可以通过super来调用父类的方法和属性。"),a("br"),t._v("\n考点：类的继承，来自《第十九节：终于，JavaScript也有了类（class）的概念》的内容。")])]),t._v(" "),a("p",[t._v("Q：下列数据结构中，不能被for...of遍历的是："),a("br"),t._v("\nA、Array数组"),a("br"),t._v("\nB、Object对象"),a("br"),t._v("\nC、String字符串"),a("br"),t._v("\nD、Set结构")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：只有该数据结构实现了Iterator遍历器接口才可以被for...of遍历，而数组，字符串，Set和Map结构正式这样的可遍历对象。而普通的Object对象并没有实现Iterator遍历器接口。"),a("br"),t._v("\n考点：具有Iterator接口可遍历对象，来自《第十四节：ES6的 Iterator 遍历器到底是什么？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于Iterator遍历器的说法，错误的是："),a("br"),t._v("\nA、next( )方法是Iterator遍历器的核心"),a("br"),t._v("\nB、当next( )返回对象的done属性为fasle，遍历结束"),a("br"),t._v("\nC、具有Iterator接口的对象视为可遍历对象"),a("br"),t._v("\nD、可以自定义一个可遍历对象和其遍历行为")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：B")]),t._v(" "),a("p",[t._v("解析：当next( )返回对象的done属性为fasle，表示遍历未结束，done属性为true时，表示遍历结束。"),a("br"),t._v("\n考点：Iterator遍历器的原理，来自《第十四节：ES6的 Iterator 遍历器到底是什么？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于新特性Generator函数的描述，错误的是："),a("br"),t._v("\nA、Generator函数，又称生成器函数"),a("br"),t._v("\nB、声明Generator函数的关键字是：function*"),a("br"),t._v("\nC、Generator函数执行后得到的一个生成器"),a("br"),t._v("\nD、使用return语句使Generator函数暂停执行，直到next方法的调用")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：使函数暂停执行的关键字是yield，不是return；return语句是使函数停止执行并退出。"),a("br"),t._v("\n考点：Generator函数的特点，来自《第十五节：有一种特殊的函数叫：Generator函数》的内容。")])]),t._v(" "),a("p",[t._v("Q：Generator函数的yield关键字的作用是："),a("br"),t._v("\nA、停止执行"),a("br"),t._v("\nB、退出函数"),a("br"),t._v("\nC、暂停执行，等待next( )方法调用"),a("br"),t._v("\nD、停止执行，可自行恢复执行")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：Generator函数可以有很多个yield。而return代表的是终止执行，yield代表的是暂停执行，后续通过调用生成器的next( )方法，可以恢复执行。"),a("br"),t._v("\n考点：yield关键字的关键字，来自《第十五节：有一种特殊的函数叫：Generator函数》的内容。")])]),t._v(" "),a("p",[t._v("Q：在Generator函数中，"),a("code",[t._v("yield*")]),t._v("语句的作用是："),a("br"),t._v("\nA、调用另外的Generator函数"),a("br"),t._v("\nB、暂停执行，待next( )方法调用后恢复"),a("br"),t._v("\nC、停止执行，退出函数"),a("br"),t._v("\nD、调用任意的其他函数")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：A")]),t._v(" "),a("p",[t._v("解析：关键字"),a("code",[t._v("yield*")]),t._v("来实现调用另外的Generator函数。如果一个Generator函数A执行过程中，进入（调用）了另一个Generator函数B，那么会一直等到Generator函数B全部执行完毕后，才会返回Generator函数A继续执行。"),a("br"),t._v("\n考点：关键字yield*的作用，来自《第十五节：有一种特殊的函数叫：Generator函数》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于ES6的module模块，下列说法错误的是："),a("br"),t._v("\nA、可以有效解决大型系统文件复杂的依赖问题"),a("br"),t._v("\nB、使用export语句可以选择性地向外部暴露自己的属性或者方法"),a("br"),t._v("\nC、使用import语句导入其他模块的属性或者方法"),a("br"),t._v("\nD、目前大部分主流浏览器都支持module模块")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：目前(2016年上半年)还没有浏览器支持module模块的开发，需要借助转码工具才可以使用。A选项是ES6的设计初衷之一，B选项是export语句的正确描述，C选项是import语句的正确描述。"),a("br"),t._v("\n考点：module模块的使用和实现，来自《一个缺失已久的特性 — module模块》的内容。")])]),t._v(" "),a("p",[t._v("Q：module模块中，对下列语句的描述，错误的是："),a("br"),t._v("\nA、export 导出"),a("br"),t._v("\nB、import 导入"),a("br"),t._v("\nC、export default 默认导出"),a("br"),t._v("\nD、import * as  重命名")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：D")]),t._v(" "),a("p",[t._v("解析：import * as：星号符*实现的是整体导入。而重命名的实现方式是：import { name as myname }。"),a("br"),t._v("\n考点：module模块的关键字语句含义，来自《一个缺失已久的特性 — module模块》的内容。")])]),t._v(" "),a("p",[t._v("Q：module模块中的注意事项，下列说法错误的："),a("br"),t._v("\nA、除了对象类型以外，导出的属性对外都是只读的"),a("br"),t._v("\nB、导入不存在的变量，值为undefined"),a("br"),t._v("\nC、导入不存在的变量，程序会抛出异常"),a("br"),t._v("\nD、可以为导入的属性和方法取任意名字")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：导入不存在的变量，程序不会抛出异常，只是值为undefined。"),a("br"),t._v("\n考点：module模块的注意事项，来自《一个缺失已久的特性 — module模块》的内容。")])]),t._v(" "),a("p",[t._v("Q：想要获取Map实例对象的成员数，利用的属性是："),a("br"),t._v("\nA、size"),a("br"),t._v("\nB、length"),a("br"),t._v("\nC、sum"),a("br"),t._v("\nD、members")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：A")]),t._v(" "),a("p",[t._v("解析：属性就是size：获取实例的成员数，其他选项都不是，很多初学者误以为是length。"),a("br"),t._v("\n考点：Map结构的知识点，来自《第十七节：ES6新增的Map和WeakMap 又是什么东西？》的内容。")])]),t._v(" "),a("p",[t._v("Q：关于定义常量的关键字const，定义一个Object对象{“name”:”Jack”}，再对属性name 的值进行修改，如：obj.name = “John”。下列说法正确的："),a("br"),t._v("\nA、修改常量，程序跑出异常"),a("br"),t._v("\nB、程序不抛出异常，修改无效"),a("br"),t._v("\nC、修改成功，name的值为John"),a("br"),t._v("\nD、程序不抛出异常，name的值为undefined")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("答案：C")]),t._v(" "),a("p",[t._v("解析：用const来声明一个对象类型的常量，就是传址赋值。而不可修改的是对象在内存中的地址，而不是对象本身。所以修改name并不是修改对象的内存地址，所以可以成功修改。"),a("br"),t._v("\n考点：const定义一个对象时候的注意事项，还记得装修师傅的故事吗？来自《第三节：ES6中另一个不得不说的关键字const》的内容。")])]),t._v(" "),a("p",[t._v("Q：说出至少5个ES6的新特性，并简述它们的作用。（简答题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("ol",[a("li",[t._v("let关键字，用于声明只在块级作用域起作用的变量。")]),t._v(" "),a("li",[t._v("const关键字，用于声明一个常量。")]),t._v(" "),a("li",[t._v("结构赋值，一种新的变量赋值方式。常用于交换变量值，提取函数返回值，设置默认值。")]),t._v(" "),a("li",[t._v("Symbol数据类型，定义一个独一无二的值。")]),t._v(" "),a("li",[t._v("Proxy代理，用于编写处理函数，来拦截目标对象的操作。")]),t._v(" "),a("li",[t._v("for...of遍历，可遍历具有iterator 接口的数据结构。")]),t._v(" "),a("li",[t._v("Set结构，存储不重复的成员值的集合。")]),t._v(" "),a("li",[t._v("Map结构，键名可以是任何类型的键值对集合。")]),t._v(" "),a("li",[t._v("Promise对象，更合理、规范地处理异步操作。")]),t._v(" "),a("li",[t._v("Class类定义类和更简便地实现类的继承。")])]),t._v(" "),a("p",[t._v("Q：使用结构赋值，实现两个变量的值的交换（编程题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("Q：使用结构赋值，完成函数的参数默认值（编程题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"前端君"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("Q：利用数组推导，计算出数组 [1,2,3,4] 每一个元素的平方并组成新的数组。（编程题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" arr1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("Q：使用模板字符串改写下面的代码。（ES5 to ES6改写题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iam  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"前端君"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"大家好，"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("iam"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('",多指教。"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n改写成：\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iam  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("我是")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("前端君")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("大家好，")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("iam"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(",多指教。")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("Q：用对象的简洁表示法改写下面的代码。（ES5 to ES6改写题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"前端君"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"say"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n改写成：\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"前端君"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("Q：用箭头函数的形式改写下面的代码。（ES5 to ES6改写题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n改写成：\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("Q：设计一个对象，键名的类型至少包含一个symbol类型，并且实现遍历所有key。（编程题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" product "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"洗衣机"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"price"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("799")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nReflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ownKeys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("Q:有一本书的属性为：{“name”:“《ES6基础系列》”, ”price”：56 }；要求使用Proxy对象对其进行拦截处理，name属性对外为“《ES6入门到懵逼》”,price属性为只读。（练习题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" book "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"《ES6基础系列》"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"price"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("book"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"《入门到懵逼》"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'price'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[t._v("Q：阅读下面的代码，并用for...of改成它。（ES5 to ES6改写题）")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 改写：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("Q：关于Set结构，阅读下面的代码，回答问题。（代码阅读题）。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("问：打印出来的size的值是多少？")]),t._v(" "),a("p",[t._v("答：2。如果回答为1的同学，多必是记得Set结构是不会存储相同的值。其实在这个案例中，两个数组[1]并不是同一个值，它们分别定义的数组，在内存中分别对应着不同的存储地址，因此并不是相同的值。所以都能存储到Set结构中，size为2。")]),t._v(" "),a("p",[t._v("Q：关于Map结构，阅读下面的代码，回答问题。（代码阅读题）")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES6系列"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" con "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("con"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("问：打印出来的变量con的值是多少，为什么？")]),t._v(" "),a("p",[t._v("答：undefined。因为set的时候用的数组[1]和get的时候用的数组[1]是分别两个不同的数组，只不过它们元素都是1。它们是分别定义的两个数组，并不是同一个值。新手避免在这里犯错。如果想达到预期的效果，你要保证get的时候和set的时候用同一个数组。比如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES6系列"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" con "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("con"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("这样的得到的变量con的值就是：“ES6系列”。")]),t._v(" "),a("p",[t._v("Q：定义一个类Animal，通过传参初始化它的类型，如：“猫科类”。它有一个实例方法：run，run函数体内容可自行定义。")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I can run'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("基于第12题的Animal类，定义一个子类Cat并继承Animal类。初始化Cat类的昵称name和年龄age。并拥有实例方法eat，eat函数体内容可自行定义。")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am eating'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("Q：利用module模块，实现两个模块A和B，A模块导出变量name，age和say方法。B模块只导入变量name和say方法，并且重命名name为nickname。")]),t._v(" "),a("p",[t._v("答：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-----模块A-------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kitty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//....")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("say"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//---module-B.js文件---import { name as nickname, say } from "模块A的相对路径";')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])])},[],!1,null,null,null);s.default=e.exports}}]);